@font-face {
	font-family: "myFont";
	src: url('../../dist/fonts/iconfont/myFont.eot');
	src: url('../../dist/fonts/iconfont/myFont.eot?#iefix') format('eot'),
		url('../../dist/fonts/iconfont/myFont.woff') format('woff'),
		url('../../dist/fonts/iconfont/myFont.ttf') format('truetype'),
		url('../../dist/fonts/iconfont/myFont.svg#myFont') format('svg');
}

@mixin icon-styles {
	font-family: "myFont";
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	font-style: normal;
	font-variant: normal;
	font-weight: normal;
	// speak: none; // only necessary if not using the private unicode range (firstGlyph option)
	text-decoration: none;
	text-transform: none;
}

%icon {
	@include icon-styles;
}

@function icon-char($filename) {
	$char: "";

	@if $filename == github {
		$char: "\E001";
	}
	@if $filename == inbox-download {
		$char: "\E002";
	}
	@if $filename == linkedin {
		$char: "\E003";
	}
	@if $filename == mail {
		$char: "\E004";
	}
	@if $filename == uEA01-airplane {
		$char: "\E005";
	}
	@if $filename == uEA02-airport {
		$char: "\E006";
	}
	@if $filename == uEA03-alarm {
		$char: "\E007";
	}
	@if $filename == undo {
		$char: "\E008";
	}

	@return $char;
}

@mixin icon($filename, $insert: before, $extend: true) {
	&:#{$insert} {
		@if $extend {
			@extend %icon;
		} @else {
			@include icon-styles;
		}
		content: icon-char($filename);
	}
}

.icon-github {
	@include icon(github);
}
.icon-inbox-download {
	@include icon(inbox-download);
}
.icon-linkedin {
	@include icon(linkedin);
}
.icon-mail {
	@include icon(mail);
}
.icon-uEA01-airplane {
	@include icon(uEA01-airplane);
}
.icon-uEA02-airport {
	@include icon(uEA02-airport);
}
.icon-uEA03-alarm {
	@include icon(uEA03-alarm);
}
.icon-undo {
	@include icon(undo);
}
